{"version":3,"sources":["components/Todo.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","id","title","removeElement","completed","completeTask","className","type","htmlFor","onClick","Header","useState","todoList","setTodoList","index","array","splice","console","log","item","document","body","classList","toggle","placeholder","onChange","newItem","querySelector","addEventListener","e","charCode","value","length","todo","push","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAceA,EAbF,SAACC,GAAW,IAChBC,EAAqDD,EAArDC,GAAIC,EAAiDF,EAAjDE,MAAkBC,GAA+BH,EAA1CI,UAA0CJ,EAA/BG,eAAeE,EAAgBL,EAAhBK,aAC1C,OACF,sBAAKC,UAAU,cAAf,UACE,uBAAOC,KAAK,WAAWD,UAAU,gBAAgBL,GAAKA,IACtD,uBAAOO,QAASP,EAAIK,UAAU,aAAcG,QAAS,kBAAMJ,EAAaJ,IAAxE,SACA,sBAAMK,UAAU,aAEhB,sBAAMA,UAAU,OAAhB,SAAwBJ,IACxB,sBAAMI,UAAU,QAAQG,QAAS,kBAAMN,EAAcF,UCiE1CS,EAvEA,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACVC,EADU,KACAC,EADA,KAKfV,EAAgB,SAACW,GACf,IAAIC,EAAQH,EACZG,EAAMC,OAAOF,EAAO,GACpBG,QAAQC,IAAIJ,GACZD,EAAY,YAAIE,IAChBE,QAAQC,IAAIN,IAkBdP,EAAe,SAACS,GAClB,IAAIC,EAAMH,EACNO,EAAMJ,EAAMD,GACbK,EAAKf,UAENe,EAAKf,WAAU,EAIfe,EAAKf,WAAU,EAEjBW,EAAMD,GAAOK,EACbN,EAAYE,GACZE,QAAQC,IAAIN,EAASE,GAAOV,YAE5B,OACH,gCACA,sBAAKE,UAAU,eAAf,UACC,sCACI,qBAAKA,UAAU,QAAQG,QA7CL,WAChBW,SAASC,KAAKC,UAAUC,OAAO,qBA8CrC,sBAAKjB,UAAU,aAAf,UACA,uBAAOC,KAAK,WAAWD,UAAU,sBACjC,sBAAMA,UAAU,cAChB,uBAAOC,KAAK,OAAOD,UAAU,wBAAwBkB,YAAY,uBAAuBC,SAxC1E,WAChB,IAAMC,EAAQN,SAASO,cAAc,aACrCD,EAAQE,iBAAiB,YAAY,SAACC,GAClC,GAAgB,KAAbA,EAAEC,UAAkBJ,EAAQK,MAAMC,OAAO,EAAE,CAC1C,IAAIC,EAAK,CACL/B,MAAOwB,EAAQK,MACf3B,WAAW,GAEXW,EAAQH,EACZG,EAAMmB,KAAKD,GACXpB,EAAY,YAAIE,IAChBW,EAAQK,MAAM,aA+BpB,8BACEnB,EAASuB,KAAI,SAACF,EAAMnB,GAAP,OACG,cAAC,EAAD,CAEAb,GAAIa,EACJZ,MAAO+B,EAAK/B,MACZE,UAAW6B,EAAK7B,UAChBD,cAAeA,EACfE,aAAcA,GALTS,YClDVsB,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACA,cAAC,EAAD,OCMW+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BZ,M","file":"static/js/main.7528058d.chunk.js","sourcesContent":["import React from 'react'\r\nconst Todo = (props) => {\r\n    var {id, title, completed, removeElement, completeTask} = props;\r\n    return (\r\n  <div className=\"task-header\">\r\n    <input type=\"checkbox\" className=\"task-checkbox\" id ={id}/>\r\n    <label htmlFor={id} className=\"task-label\"  onClick={() => completeTask(id)}>\r\n    <span className=\"circle\"></span>\r\n    </label>\r\n    <span className=\"task\">{title}</span>\r\n    <span className=\"cross\" onClick={() => removeElement(id)}></span>\r\n</div>)\r\n}\r\n\r\nexport default Todo\r\n ","import React from 'react'\r\nimport { useState } from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst Header = () => {\r\n    const [todoList, setTodoList]=useState([]);\r\n    const changeTheme = () => {\r\n        document.body.classList.toggle(\"theme-light\");\r\n    }\r\nconst removeElement = (index) => {\r\n        var array = todoList;\r\n        array.splice(index, 1);\r\n        console.log(index);\r\n        setTodoList([...array]);\r\n        console.log(todoList)\r\n      }\r\nconst addTask = () => {\r\nconst newItem=document.querySelector(\".add-task\");\r\nnewItem.addEventListener('keypress', (e) => {\r\n    if(e.charCode===13 &&  newItem.value.length>0){\r\n        var todo={\r\n            title: newItem.value,\r\n            completed: false\r\n        }\r\n        var array = todoList;\r\n        array.push(todo);\r\n        setTodoList([...array]);\r\n        newItem.value='';\r\n        \r\n    }\r\n});\r\n}\r\nconst completeTask = (index) => {\r\n    var array=todoList;\r\n    var item =array[index];\r\n    if(item.completed)\r\n    {\r\n      item.completed=false;\r\n    }\r\n    else\r\n    {\r\n      item.completed=true;\r\n    }\r\n    array[index]=item;\r\n    setTodoList(array);\r\n    console.log(todoList[index].completed)\r\n  }\r\n    return (\r\n <div>\r\n <div className=\"to-do-header\">\r\n  <h1>TODO</h1>\r\n      <div className=\"theme\" onClick={changeTheme}></div>\r\n  </div>\r\n  <div className=\"input-task\">\r\n  <input type=\"checkbox\" className=\"add-task-checkbox\"/>\r\n  <span className=\"checkmark\"></span>\r\n  <input type=\"text\" className=\"form-control add-task\" placeholder=\"Create a new todo...\" onChange={addTask}/>\r\n  </div>\r\n  <div>\r\n   {todoList.map((todo, index) =>\r\n                    <Todo\r\n                    key={index} \r\n                    id={index}\r\n                    title={todo.title}\r\n                    completed={todo.completed}\r\n                    removeElement={removeElement}\r\n                    completeTask={completeTask}\r\n                    />\r\n   )\r\n    }\r\n   </div>\r\n   </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}